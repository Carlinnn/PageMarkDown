{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Esse \u00e9 o meu markdown E estarei aqui listando todos os meus aprendizados, ent\u00e3o chamarei aqui de Wiki do Carl\u00e3o Pipz Academy Wiki Markdown","title":"Inic\u00edo"},{"location":"#esse-e-o-meu-markdown","text":"E estarei aqui listando todos os meus aprendizados, ent\u00e3o chamarei aqui de Wiki do Carl\u00e3o Pipz Academy Wiki Markdown","title":"Esse \u00e9 o meu markdown"},{"location":"delphi/","text":"Layout Control Overload (Serve para modificar uma class com o mesmo 'nome' ou o mesmo proposito) Padr\u00e3o repository Toda classe precisa do Constructor e destructor. Gets = pegandos os valores sets = definindo os valores A\u00e7\u00f5es = Realizando as a\u00e7\u00f5es python ser\u00e1 a melhor escolha da minha life I have a lot money","title":"Delphi"},{"location":"github/","text":"Github crie um novo reposit\u00f3rio na linha de comando echo \"# test\" >> README.md git init git add README.md git commit -m \"first commit\" git branch -M main git remote add origin (link do git) git push -u origin main ou envie um reposit\u00f3rio existente a partir da linha de comando git remote add origin (Link do git) git branch -M main git push -u origin main","title":"Github"},{"location":"github/#github","text":"","title":"Github"},{"location":"github/#crie-um-novo-repositorio-na-linha-de-comando","text":"echo \"# test\" >> README.md git init git add README.md git commit -m \"first commit\" git branch -M main git remote add origin (link do git) git push -u origin main","title":"crie um novo reposit\u00f3rio na linha de comando"},{"location":"github/#ou-envie-um-repositorio-existente-a-partir-da-linha-de-comando","text":"git remote add origin (Link do git) git branch -M main git push -u origin main","title":"ou envie um reposit\u00f3rio existente a partir da linha de comando"},{"location":"markdownpadrao/","text":"Mark Down Padr\u00e3o como criar novas p\u00e1ginas Mark Down Padr\u00e3o tutorial, para a cria\u00e7\u00e3o de novas p\u00e1ginas.","title":"Markdownpadrao"},{"location":"markdownpadrao/#mark-down-padrao-como-criar-novas-paginas","text":"Mark Down Padr\u00e3o tutorial, para a cria\u00e7\u00e3o de novas p\u00e1ginas.","title":"Mark Down Padr\u00e3o como criar novas p\u00e1ginas"},{"location":"sqlf/","text":"SQL O que \u00e9 sql SQL, ou Standard Query Language, \u00e9 uma linguagem padr\u00e3o declarativa utilizada para a manipula\u00e7\u00e3o de bancos de dados relacionais. Apesar de n\u00e3o ser uma linguagem de sintaxe muito complexa, sendo acess\u00edvel a programadores e programadoras em diferentes n\u00edveis de experi\u00eancia, o SQL \u00e9 um conhecimento fundamental para quem precisa fazer consulta, pedidos e escrever queries em bancos de dados. Principais comandos SQL Como falamos algumas linhas acima, o SQL n\u00e3o \u00e9 uma linguagem de grande complexidade, permitindo, inclusive, que n\u00e3o somente profissionais de tecnologia a manuseiem. Para executar tarefas simples, como adicionar ou excluir informa\u00e7\u00f5es em um banco de dados, existem alguns comandos chave que podem servir como ponto de partida para o aprendizado de quem ainda \u00e9 iniciante em SQL. Para ajud\u00e1-lo(a) a conhecer melhor essa linguagem t\u00e3o importante, listaremos abaixo os 10 comandos mais fundamentais do SQL que todo programador ou programadora devem saber. Vamos l\u00e1? DML: consultando e modificando os registros da tabela DML, ou Data Manipulation Language \u00e9 um subconjunto do SQL que diz respeito aos comandos utilizados para manipular diretamente os dados de uma tabela (ou banco de dados). Com o DML \u00e9 poss\u00edvel inserir, atualizar, modificar e excluir registros de maneira r\u00e1pida e direta, sem a necessidade de uma tecnologia intermedi\u00e1ria. Insert: adicionando registros a uma tabela O insert, como \u00e9 poss\u00edvel deduzir pela nomenclatura, \u00e9 o comando que adiciona registros a uma tabela, ou seja, inclui dados em um banco de dados. Para utiliz\u00e1-lo, basta escrever a seguinte sintaxe: INSERT into [tabela exemplo] (campo1, campo2, campo3) values (dado1, 'dado2', 'dado3'); No exemplo acima, apontamos os campos 1, 2 e 3 na tabela exemplo e, em seguida, descrevemos seus valores (dados 1, 2 e 3). INSERT INTO table_name (column1, column2, column3, ...) VALUES (value1, value2, value3, ...); Update: atualizando os registros j\u00e1 inseridos O comando update \u00e9 utilizado para atualizar registros que j\u00e1 est\u00e3o inseridos na tabela, mas que por algum motivo precisam ser corrigidos ou complementados. Para utilizar este comando, basta escrever a seguinte linha: UPDATE tabela exemplo SET campo1 = 'dado1' WHERE id = dado2; No exemplo acima, apontamos que a modifica\u00e7\u00e3o deve ser feita na tabela exemplo, em seu campo1. Os dados modificados s\u00e3o os dados1 e dado2. UPDATE table_name SET column1 = value1, column2 = value2, ... WHERE condition; Delete: excluindo registros de uma tabela Com o comando delete, podemos excluir registros que est\u00e3o em uma tabela, eliminando essa informa\u00e7\u00e3o de toda base de dados. Esse comando, no entanto, excluir apenas os registros. Estrutura, \u00edndices e outros atributos do projeto continuam sem modifica\u00e7\u00f5es. Para utiliz\u00e1-lo, basta escrever a sintaxe abaixo: DELETE FROM tabela exemplo; No exemplo acima, indicamos que a exclus\u00e3o deve ser feita na tabela exemplo. DELETE FROM table_name WHERE condition; Select: retomando registros na tabela O comando select permite que fa\u00e7amos consultas em uma tabela, ou seja, pode ser usado de diversas maneiras diferentes para que diversos tipos de consultas possam ser feitos. Por exemplo: podemos retomar todos os dados de uma tabela, dados de somente uma coluna, uma \u00fanica informa\u00e7\u00e3o em espec\u00edfico, etc. Para utilizar este comando, h\u00e1 as seguintes op\u00e7\u00f5es de c\u00f3digo: SELECT * FROM tabela exemplo;, onde o * indica que queremos consultar todos os dados da tabela exemplo. SELECT dado1, dado2 FROM tabela exemplo;, onde indicamos que queremos consultar somente os dados 1 e 2 da tabela exemplo. H\u00e1, ainda, mais maneiras de utilizar este comando. SELECT column1, column2, ... FROM table_name; SELECT column1, column2, ... FROM table_name; DDL: criando, alterando e excluindo tabelas de registros Os comandos do subconjunto DDL, ou Data Definition Language, s\u00e3o aqueles utilizados para manipular a estrutura de um banco de dados, e n\u00e3o somente os registros inclu\u00eddos ali. Com estes comandos, podemos criar novas tabelas, alterar tabelas j\u00e1 existentes e tamb\u00e9m exclui-las. Veja, abaixo, os tr\u00eas principais comandos. CREATE: criando novas tabelas em um banco de dados Com o comando create \u00e9 poss\u00edvel criar uma nova tabela dentro de um banco de dados. Para utiliz\u00e1-lo, \u00e9 preciso, primeiro, criar um objeto dentro do banco de dados, ou um banco de dados completamente vazio: CREATE DATABASE banco exemplo; No exemplo acima, criamos o banco de dados banco exemplo. Para criar, dentro deste banco, uma tabela, \u00e9 preciso o comando create table: CREATE TABLE tabela exemplo (id INT PRIMARY KEY, campo1 VARCHAR(50), campo2 (VARCHAR(100)); No exemplo acima, criamos a tabela exemplo, onde o comando INT PRIMARY KEY indica que o campo id \u00e9 a chave prim\u00e1ria da tabela, ou seja, a identifica\u00e7\u00e3o principal do registro. Em seguida, estipulamos as colunas com os campos 1 e 2 e, com o comando VARCHAR, definimos a quantidade m\u00e1xima de caracteres que estes campos comportar\u00e3o (50 a 100, respectivamente). - Para criar uma database CREATE DATABASE databasename; - Para criar uma tabela CREATE TABLE table_name ( column1 datatype, column2 datatype, column3 datatype, .... ); Alte: alterando uma tabela j\u00e1 criada O comando alter \u00e9 utilizado para alterar uma tabela pr\u00e9 existente e pode ser manipulado da seguinte maneira: ALTER TABLE tabela exemplo ADD nome INT; No exemplo acima, estamos alterando a tabela exemplo ao adicionar uma nova coluna: a coluna nome. Drop: excluindo uma tabela do banco de dados Enfim, o comando drop \u00e9 aquele que utilizamos para excluir objetos, ou tabelas, de nossa base de dados. Esse comando tamb\u00e9m pode ser utilizados para excluir um banco de dados inteiro, como veremos nos exemplos abaixo. Com a linha DROP TABLE tabela exemplo;, \u00e9 poss\u00edvel excluir a tabela exemplo de um banco de dados. Com a linha DROP DATABASE banco exemplo;, \u00e9 poss\u00edvel excluir o banco de dados banco exemplo inteiro. ALTER TABLE table_name ADD column_name datatype; DCL definindo permiss\u00f5es aos objetos do banco de dados subconjunto dos comandos DCL, ou Data Control Language, \u00e9 respons\u00e1vel por controlar o acesso e os n\u00edveis de privil\u00e9gios de diferentes usu\u00e1rios aos registros de um banco de dados. Com ele, \u00e9 poss\u00edvel conferir mais seguran\u00e7a aos seus dados. Vejamos, abaixo, os tr\u00eas principais comandos deste grupo. Grant: permitindo acesso a objetos do banco de dados Com o comando grant \u00e9 poss\u00edvel permitir diferentes tipos de privil\u00e9gios nos acessos a uma tabela. Em suma, podemos dizer que determinadas a\u00e7\u00f5es s\u00f3 podem ser tomadas por determinados usu\u00e1rios. Veja o exemplo de utiliza\u00e7\u00e3o abaixo: GRANT SELECT, INSERT, UPDATE ON tabela exemplo TO Usuario1; Na linha acima, estipulamos que os comandos select, insert e update s\u00f3 podem ser utilizados na tabela exemplo pelo Usuario1. Revoke: removendo o acesso a objetos do banco de dados Com o comando revoke, podemos fazer o oposto ao comando anterior: ele revoga os privil\u00e9gios concedidos a determinados usu\u00e1rios. Para utiliz\u00e1-lo, basta seguir a seguinte sintaxe: REVOKE SELECT ON tabela exemplo FROM Usuario1; Na linha acima, revogamos o privil\u00e9gios do Usuario1 de utilizar o comando select na tabela exemplo. Deny: bloqueando o acesso para objetos e usu\u00e1rios espec\u00edficos O comando deny \u00e9 mais amplo, negando explicitamente o acesso ou permiss\u00f5es, a um banco de dados ou tabela, a um usu\u00e1rio espec\u00edfico. Veja, abaixo, um exemplo de sua utiliza\u00e7\u00e3o: DENY SELECT ON tabela exemplo TO Usuario2; Acima, estamos estipulando que o Usuario2 teve o seu acesso ao comando select, na tabela exemplo, totalmente negado. Agradecimentos a Kenzie","title":"Sql Firebird"},{"location":"sqlf/#sql","text":"","title":"SQL"},{"location":"sqlf/#o-que-e-sql","text":"SQL, ou Standard Query Language, \u00e9 uma linguagem padr\u00e3o declarativa utilizada para a manipula\u00e7\u00e3o de bancos de dados relacionais. Apesar de n\u00e3o ser uma linguagem de sintaxe muito complexa, sendo acess\u00edvel a programadores e programadoras em diferentes n\u00edveis de experi\u00eancia, o SQL \u00e9 um conhecimento fundamental para quem precisa fazer consulta, pedidos e escrever queries em bancos de dados.","title":"O que \u00e9 sql"},{"location":"sqlf/#principais-comandos-sql","text":"Como falamos algumas linhas acima, o SQL n\u00e3o \u00e9 uma linguagem de grande complexidade, permitindo, inclusive, que n\u00e3o somente profissionais de tecnologia a manuseiem. Para executar tarefas simples, como adicionar ou excluir informa\u00e7\u00f5es em um banco de dados, existem alguns comandos chave que podem servir como ponto de partida para o aprendizado de quem ainda \u00e9 iniciante em SQL. Para ajud\u00e1-lo(a) a conhecer melhor essa linguagem t\u00e3o importante, listaremos abaixo os 10 comandos mais fundamentais do SQL que todo programador ou programadora devem saber. Vamos l\u00e1?","title":"Principais comandos SQL"},{"location":"sqlf/#_1","text":"DML: consultando e modificando os registros da tabela DML, ou Data Manipulation Language \u00e9 um subconjunto do SQL que diz respeito aos comandos utilizados para manipular diretamente os dados de uma tabela (ou banco de dados). Com o DML \u00e9 poss\u00edvel inserir, atualizar, modificar e excluir registros de maneira r\u00e1pida e direta, sem a necessidade de uma tecnologia intermedi\u00e1ria.","title":""},{"location":"sqlf/#insert","text":"adicionando registros a uma tabela O insert, como \u00e9 poss\u00edvel deduzir pela nomenclatura, \u00e9 o comando que adiciona registros a uma tabela, ou seja, inclui dados em um banco de dados. Para utiliz\u00e1-lo, basta escrever a seguinte sintaxe: INSERT into [tabela exemplo] (campo1, campo2, campo3) values (dado1, 'dado2', 'dado3'); No exemplo acima, apontamos os campos 1, 2 e 3 na tabela exemplo e, em seguida, descrevemos seus valores (dados 1, 2 e 3). INSERT INTO table_name (column1, column2, column3, ...) VALUES (value1, value2, value3, ...);","title":"Insert:"},{"location":"sqlf/#update","text":"atualizando os registros j\u00e1 inseridos O comando update \u00e9 utilizado para atualizar registros que j\u00e1 est\u00e3o inseridos na tabela, mas que por algum motivo precisam ser corrigidos ou complementados. Para utilizar este comando, basta escrever a seguinte linha: UPDATE tabela exemplo SET campo1 = 'dado1' WHERE id = dado2; No exemplo acima, apontamos que a modifica\u00e7\u00e3o deve ser feita na tabela exemplo, em seu campo1. Os dados modificados s\u00e3o os dados1 e dado2. UPDATE table_name SET column1 = value1, column2 = value2, ... WHERE condition;","title":"Update:"},{"location":"sqlf/#delete","text":"excluindo registros de uma tabela Com o comando delete, podemos excluir registros que est\u00e3o em uma tabela, eliminando essa informa\u00e7\u00e3o de toda base de dados. Esse comando, no entanto, excluir apenas os registros. Estrutura, \u00edndices e outros atributos do projeto continuam sem modifica\u00e7\u00f5es. Para utiliz\u00e1-lo, basta escrever a sintaxe abaixo: DELETE FROM tabela exemplo; No exemplo acima, indicamos que a exclus\u00e3o deve ser feita na tabela exemplo. DELETE FROM table_name WHERE condition;","title":"Delete:"},{"location":"sqlf/#select","text":"retomando registros na tabela O comando select permite que fa\u00e7amos consultas em uma tabela, ou seja, pode ser usado de diversas maneiras diferentes para que diversos tipos de consultas possam ser feitos. Por exemplo: podemos retomar todos os dados de uma tabela, dados de somente uma coluna, uma \u00fanica informa\u00e7\u00e3o em espec\u00edfico, etc. Para utilizar este comando, h\u00e1 as seguintes op\u00e7\u00f5es de c\u00f3digo: SELECT * FROM tabela exemplo;, onde o * indica que queremos consultar todos os dados da tabela exemplo. SELECT dado1, dado2 FROM tabela exemplo;, onde indicamos que queremos consultar somente os dados 1 e 2 da tabela exemplo. H\u00e1, ainda, mais maneiras de utilizar este comando. SELECT column1, column2, ... FROM table_name; SELECT column1, column2, ... FROM table_name;","title":"Select:"},{"location":"sqlf/#ddl","text":"criando, alterando e excluindo tabelas de registros Os comandos do subconjunto DDL, ou Data Definition Language, s\u00e3o aqueles utilizados para manipular a estrutura de um banco de dados, e n\u00e3o somente os registros inclu\u00eddos ali. Com estes comandos, podemos criar novas tabelas, alterar tabelas j\u00e1 existentes e tamb\u00e9m exclui-las. Veja, abaixo, os tr\u00eas principais comandos.","title":"DDL:"},{"location":"sqlf/#create","text":"criando novas tabelas em um banco de dados Com o comando create \u00e9 poss\u00edvel criar uma nova tabela dentro de um banco de dados. Para utiliz\u00e1-lo, \u00e9 preciso, primeiro, criar um objeto dentro do banco de dados, ou um banco de dados completamente vazio: CREATE DATABASE banco exemplo; No exemplo acima, criamos o banco de dados banco exemplo. Para criar, dentro deste banco, uma tabela, \u00e9 preciso o comando create table: CREATE TABLE tabela exemplo (id INT PRIMARY KEY, campo1 VARCHAR(50), campo2 (VARCHAR(100)); No exemplo acima, criamos a tabela exemplo, onde o comando INT PRIMARY KEY indica que o campo id \u00e9 a chave prim\u00e1ria da tabela, ou seja, a identifica\u00e7\u00e3o principal do registro. Em seguida, estipulamos as colunas com os campos 1 e 2 e, com o comando VARCHAR, definimos a quantidade m\u00e1xima de caracteres que estes campos comportar\u00e3o (50 a 100, respectivamente). - Para criar uma database CREATE DATABASE databasename; - Para criar uma tabela CREATE TABLE table_name ( column1 datatype, column2 datatype, column3 datatype, .... );","title":"CREATE:"},{"location":"sqlf/#alte","text":"alterando uma tabela j\u00e1 criada O comando alter \u00e9 utilizado para alterar uma tabela pr\u00e9 existente e pode ser manipulado da seguinte maneira: ALTER TABLE tabela exemplo ADD nome INT; No exemplo acima, estamos alterando a tabela exemplo ao adicionar uma nova coluna: a coluna nome. Drop: excluindo uma tabela do banco de dados Enfim, o comando drop \u00e9 aquele que utilizamos para excluir objetos, ou tabelas, de nossa base de dados. Esse comando tamb\u00e9m pode ser utilizados para excluir um banco de dados inteiro, como veremos nos exemplos abaixo. Com a linha DROP TABLE tabela exemplo;, \u00e9 poss\u00edvel excluir a tabela exemplo de um banco de dados. Com a linha DROP DATABASE banco exemplo;, \u00e9 poss\u00edvel excluir o banco de dados banco exemplo inteiro. ALTER TABLE table_name ADD column_name datatype;","title":"Alte:"},{"location":"sqlf/#dcl","text":"definindo permiss\u00f5es aos objetos do banco de dados subconjunto dos comandos DCL, ou Data Control Language, \u00e9 respons\u00e1vel por controlar o acesso e os n\u00edveis de privil\u00e9gios de diferentes usu\u00e1rios aos registros de um banco de dados. Com ele, \u00e9 poss\u00edvel conferir mais seguran\u00e7a aos seus dados. Vejamos, abaixo, os tr\u00eas principais comandos deste grupo.","title":"DCL"},{"location":"sqlf/#grant","text":"permitindo acesso a objetos do banco de dados Com o comando grant \u00e9 poss\u00edvel permitir diferentes tipos de privil\u00e9gios nos acessos a uma tabela. Em suma, podemos dizer que determinadas a\u00e7\u00f5es s\u00f3 podem ser tomadas por determinados usu\u00e1rios. Veja o exemplo de utiliza\u00e7\u00e3o abaixo: GRANT SELECT, INSERT, UPDATE ON tabela exemplo TO Usuario1; Na linha acima, estipulamos que os comandos select, insert e update s\u00f3 podem ser utilizados na tabela exemplo pelo Usuario1.","title":"Grant:"},{"location":"sqlf/#revoke","text":"removendo o acesso a objetos do banco de dados Com o comando revoke, podemos fazer o oposto ao comando anterior: ele revoga os privil\u00e9gios concedidos a determinados usu\u00e1rios. Para utiliz\u00e1-lo, basta seguir a seguinte sintaxe: REVOKE SELECT ON tabela exemplo FROM Usuario1; Na linha acima, revogamos o privil\u00e9gios do Usuario1 de utilizar o comando select na tabela exemplo. Deny: bloqueando o acesso para objetos e usu\u00e1rios espec\u00edficos O comando deny \u00e9 mais amplo, negando explicitamente o acesso ou permiss\u00f5es, a um banco de dados ou tabela, a um usu\u00e1rio espec\u00edfico. Veja, abaixo, um exemplo de sua utiliza\u00e7\u00e3o: DENY SELECT ON tabela exemplo TO Usuario2; Acima, estamos estipulando que o Usuario2 teve o seu acesso ao comando select, na tabela exemplo, totalmente negado. Agradecimentos a Kenzie","title":"Revoke:"}]}